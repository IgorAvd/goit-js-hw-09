{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaH,EAAKE,cAAc,uBAChCE,EAAYJ,EAAKE,cAAc,sBAC/BG,EAAcL,EAAKE,cAAc,wBAGvC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAZPR,EAAKgB,iBAAiB,UAgBtB,SAAsBC,GACpBA,EAAIC,iBAOJ,IALA,IAAMC,EAAeC,SAASjB,EAAWkB,OACnCC,EAAOF,SAAShB,EAAUiB,OAC1BE,EAASH,SAASf,EAAYgB,OAC9BG,EAAW,GAERC,EAAI,EAAGA,GAAKF,EAAQE,IAAK,CAChC,IAAMjB,EAAQW,GAAgBM,EAAI,GAAKH,EACvCE,EAASE,KAAKpB,EAAcmB,EAAGjB,G,CAEjCC,QAAQkB,IACNH,EAASI,KAAI,SAAAC,G,OACXA,EACGC,MAAK,SAAAC,G,OACJjC,EAAAkC,OAAOC,QACL,uBAA+CC,OAAtBH,EAAOxB,SAAS,QAAmB2B,OAAbH,EAAOvB,MAAM,M,IAG/D2B,OAAM,SAAAC,G,OACLtC,EAAAkC,OAAOK,QACL,sBAA2CH,OAArBE,EAAM7B,SAAS,QAAkB2B,OAAZE,EAAM5B,MAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\nconst form = document.querySelector('.form');\nconst delayInput = form.querySelector('input[name=\"delay\"]');\nconst stepInput = form.querySelector('input[name=\"step\"]');\nconst amountInput = form.querySelector('input[name=\"amount\"]');\nform.addEventListener('submit', onFormSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onFormSubmit(evt) {\n  evt.preventDefault();\n\n  const initialDelay = parseInt(delayInput.value);\n  const step = parseInt(stepInput.value);\n  const amount = parseInt(amountInput.value);\n  const promises = [];\n\n  for (let i = 1; i <= amount; i++) {\n    const delay = initialDelay + (i - 1) * step;\n    promises.push(createPromise(i, delay));\n  }\n  Promise.all(\n    promises.map(promise =>\n      promise\n        .then(result =>\n          Notify.success(\n            `✅ Fulfilled promise ${result.position} in ${result.delay}ms`\n          )\n        )\n        .catch(error =>\n          Notify.failure(\n            `❌ Rejected promise ${error.position} in ${error.delay}ms`\n          )\n        )\n    )\n  );\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","initialDelay","parseInt","value","step","amount","promises","i","push","all","map","promise","then","result","Notify","success","concat","catch","error","failure"],"version":3,"file":"03-promises.1b783d63.js.map"}